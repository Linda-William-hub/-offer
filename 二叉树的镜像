//操作给定的二叉树，将其变换为源二叉树的镜像。
/*
镜像
  左右子树进行交换
  每个结点都要进行
  为左右子树数据不需要交叉，所以比较简单
*/

/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    void Mirror(TreeNode *pRoot) {
        TreeNode * p;
        if (pRoot == NULL)
            return;
        //子树进行交换 
        p = pRoot->left;
        pRoot->left = pRoot->right;
        pRoot->right = p;
        //对子树进行镜像
        Mirror(pRoot->left);
        Mirror(pRoot->right);
    }
};
